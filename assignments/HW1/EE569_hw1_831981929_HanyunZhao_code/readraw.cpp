// This sample code reads in image data from a RAW image file and // writes it into another file// NOTE:	The code assumes that the image is of size 256 x 256 and is in the//			RAW format. You will need to make corresponding changes to//			accommodate images of different sizes and/or types#include <stdio.h>#include <iostream>#include <stdlib.h>using namespace std;int main(int argc, char *argv[]){	// Define file pointer and variables	FILE *file;	int BytesPerPixel;//	int Size = 256;		// Check for proper syntax	if (argc < 3){		cout << "Syntax Error - Incorrect Parameter Usage:" << endl;		cout << "program_name input_image.raw output_image.raw [BytesPerPixel = 1] [Size = 256]" << endl;		return 0;	}		// Check if image is grayscale or color	if (argc < 4){		BytesPerPixel = 1; // default is grey image	} 	else {		BytesPerPixel = atoi(argv[3]);		// Check if size is specified//		if (argc >= 5){//			Size = atoi(argv[4]);//		}	}	// Allocate image data array	/*    unsigned char Imagedata[768*512*3];    if (!(file=fopen(argv[1],"rb"))) {        cout << "Cannot open file: " << argv[1] <<endl;        exit(1);    }    fread(Imagedata, sizeof(unsigned char), 768*512*3, file);    fclose(file);    int i;    for(i=0;i<30;i++) cout<<(int)Imagedata[i]<<" ";    */	unsigned char Imagedata[768][512][BytesPerPixel];	// Read image (filename specified by first argument) into image data matrix	if (!(file=fopen(argv[1],"rb"))) {		cout << "Cannot open file: " << argv[1] <<endl;		exit(1);	}	fread(Imagedata, sizeof(unsigned char), 768*512*3, file);	fclose(file);	///////////////////////// INSERT YOUR PROCESSING CODE HERE /////////////////////////    //cout<<(int)Imagedata[1][2][0]<<" "<<(int)Imagedata[1][2][1]<<" "<<(int)Imagedata[1][2][2]<<endl;    int i,j;    for(j=0;j<8;j++){        for(i=0;i<8;i++){            cout<<(int)Imagedata[i][j][0]<<","<<(int)Imagedata[i][j][1]<<","<<(int)Imagedata[i][j][2]<<"  ";        }        cout<<endl;    }	// Write image data (filename specified by second argument) from image data matrix	if (!(file=fopen(argv[2],"wb"))) {		cout << "Cannot open file: " << argv[2] << endl;		exit(1);	}	fwrite(Imagedata, sizeof(unsigned char), 768*512*BytesPerPixel, file);	fclose(file);    cout<<"finished"<<endl;	return 0;}